name: LaTeX Build

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-22.04
    permissions:
      contents: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Documents to compile
        run: |
          # List files that shall be compiled. The ".tex" _must_ be ommited.
          # Paths are relative to the project root.
          TEX_FILES=("main" "subfolder/extra")

          # This is the bind path inside the container.
          BPATH="/latex/"

          # Generate .tex filenames relative to BPATH.
          # This usualy may not be changed manually.
          COMPILE_FILES=()
          for texfile in "${TEX_FILES[@]}"; do
            FILE=("${BPATH}${texfile}.tex")
            COMPILE_FILES+="$FILE"
            if ! [[ -f "$FILE" ]]; then
                echo "Error, ${FILE} is not a valid file/path to a .tex file!"
            fi
          done

          # Generate .pdf filenames relative to BPATH used for creating the
          # outputs, i.e. the PDFs and the artifacts & the release.
          OUPUT_FILES=()
          for texfile in "${TEX_FILES[@]}"; do
            OUTPUT_FILES+=("${BPATH}${texfile}.pdf")
          done

      - name: Build LaTeX document
        run: |
          docker pull rearrangedletters/latex-full
          echo $PWD:${BPATH::-1}
          docker run -d -t --name=texy -v $PWD:${BPATH::-1} rearrangedletters/latex-full
          # Remove and re-install the packages with the desired version here.

          for file in "${COMPILE_FILES[@]}"
          do
            for i in {1..3}; do   # This runs the compilation 3 times
              docker exec -d texy pdflatex --output-directory=${BPATH::-1} $file
            done
          done

          # Move compiled PDFs outside the container.
          for output in "${OUTPUT_FILES[@]}"
          do
            docker exec -d texy cp "$output"
          done

      - name: Upload PDF artifact
        uses: actions/upload-artifact@v2
        with:
          name: pdf-artifacts
          path: ${OUTPUT_FILES[@]}

      - name: Publish PDFs as a release
        uses: ncipollo/release-action@v1
        with:
          artifacts: ${OUTPUT_FILES[@]}
          makeLatest: true
          tag: "latest"
          allowUpdates: true
